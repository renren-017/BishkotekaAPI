# Generated by Django 4.1.7 on 2023-03-30 18:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(max_length=1000)),
                ("price", models.PositiveIntegerField()),
                ("location", models.CharField(max_length=200)),
                (
                    "entry",
                    models.CharField(
                        choices=[
                            ("свободный", "Свободный"),
                            ("по приглашению", "По приглашению"),
                            ("по регистрации", "По регистрации"),
                        ],
                        default="свободный",
                        max_length=15,
                    ),
                ),
                (
                    "moderation_status",
                    models.CharField(
                        choices=[
                            ("отменён", "Отменён"),
                            ("на модерации", "На модерации"),
                            ("модерация пройдена", "Модерация пройдена"),
                        ],
                        default="на модерации",
                        max_length=20,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name="EventImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="images/")),
            ],
        ),
        migrations.CreateModel(
            name="OccurrenceDays",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "monday",
                    models.BooleanField(default=False, verbose_name="понедельник"),
                ),
                ("tuesday", models.BooleanField(default=False, verbose_name="вторник")),
                ("wednesday", models.BooleanField(default=False, verbose_name="среда")),
                (
                    "thursday",
                    models.BooleanField(default=False, verbose_name="четверг"),
                ),
                ("friday", models.BooleanField(default=False, verbose_name="пятница")),
                (
                    "saturday",
                    models.BooleanField(default=False, verbose_name="суббота"),
                ),
                (
                    "sunday",
                    models.BooleanField(default=False, verbose_name="воскресенье"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PromotionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("price", models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="OneTimeEvent",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.event",
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField()),
            ],
            bases=("events.event",),
        ),
        migrations.CreateModel(
            name="RegularEvent",
            fields=[
                (
                    "event_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="events.event",
                    ),
                ),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
            ],
            bases=("events.event",),
        ),
        migrations.CreateModel(
            name="EventPromotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promotions",
                        to="events.event",
                    ),
                ),
                (
                    "promotion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="events.promotiontype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EventInterest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interested",
                        to="events.event",
                    ),
                ),
            ],
        ),
    ]
